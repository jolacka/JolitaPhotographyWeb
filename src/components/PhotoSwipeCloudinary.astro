---
// PhotoSwipeCloudinary.astro
import { Image } from 'astro:assets'

interface ImageData {
	src: string
	width: number
	height: number
}

interface Props {
	images: ImageData[]
	galleryId?: string
	imageHeight?: number
	className?: string
}

const {
	images,
	galleryId = 'cloudinary-gallery',
	imageHeight = 500, // Increased default height
	className = 'grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3 md:gap-4'
} = Astro.props
---

<link
	rel="stylesheet"
	href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/5.4.2/photoswipe.min.css"
/>

<div class="pswp-gallery" id={galleryId}>
	<div class="mx-auto max-w-7xl">
		<!-- Added max-width container -->
		<div class={className}>
			{
				images.map((image, index) => (
					<a
						href={image.src}
						data-pswp-src={image.src}
						data-pswp-width={image.width}
						data-pswp-height={image.height}
						class="group aspect-[3/4] overflow-hidden rounded-lg shadow-md transition-transform duration-300 hover:scale-105"
					>
						<img
							src={image.src}
							alt={`Gallery image ${index + 1}`}
							width={image.width}
							height={imageHeight}
							class="h-full w-full object-cover transition-all duration-300 group-hover:brightness-110"
							loading={index < 6 ? 'eager' : 'lazy'}
						/>
					</a>
				))
			}
		</div>
	</div>
</div>

<script>
	import PhotoSwipeLightbox from 'photoswipe/lightbox'
	import PhotoSwipe from 'photoswipe'

	let lightbox: any = null

	function initPhotoSwipe() {
		const galleries = document.querySelectorAll('.pswp-gallery')

		galleries.forEach((gallery) => {
			if (lightbox) {
				lightbox.destroy()
				lightbox = null
			}

			lightbox = new PhotoSwipeLightbox({
				gallery: gallery,
				children: 'a',
				pswpModule: PhotoSwipe,
				bgOpacity: 0.85,
				showHideAnimationType: 'fade',
				zoomAnimationDuration: 300,
				allowMouseDrag: true,
				allowPanToNext: true,
				imageClickAction: 'zoom',
				tapAction: 'zoom',
				doubleTapAction: 'zoom',
				preloadFirstSlide: true,
				preload: [1, 2],
				padding: { top: 20, bottom: 20, left: 20, right: 20 },
				close: true,
				zoom: true,
				counter: true,
				arrowKeys: true,
				wheelToZoom: false
			})

			// Event handlers
			lightbox.on('uiRegister', function () {
				lightbox.pswp.ui.registerElement({
					name: 'custom-caption',
					order: 9,
					isButton: false,
					appendTo: 'root',
					html: '',
					onInit: (el: any) => {
						lightbox.pswp.on('change', () => {
							const currSlideElement = lightbox.pswp.currSlide.data.element
							let captionText = ''
							if (currSlideElement) {
								captionText = currSlideElement.querySelector('img').getAttribute('alt') || ''
							}
							el.innerHTML = captionText
						})
					}
				})
			})

			lightbox.init()
		})
	}

	// Initialize on first load
	initPhotoSwipe()

	// Handle Astro view transitions
	document.addEventListener('astro:page-load', () => {
		initPhotoSwipe()
	})

	document.addEventListener('astro:before-swap', () => {
		if (lightbox) {
			lightbox.destroy()
			lightbox = null
		}
	})
</script>
